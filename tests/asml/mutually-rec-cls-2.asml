let _v3 v4  =
 let v16 = new 4  in
 let addr_v3 = _v3 in
 let v19 = mem(v16 + 0) <- addr_v3 in
 let v15 = new 8  in
 let addr_v5 = _v5 in
 let v18 = mem(v15 + 0) <- addr_v5 in
 let v17 = mem(v15 + 4) <- v16 in
 let v10 = 0 in
 if v4 <= v10 then 1 else let v12 = 1 in
 let v11 = sub v4 v12 in
 call_closure v15 v11 
 
let _v5 v6  =
 let v3 = mem(%self + 4) in
 let v7 = 0 in
 if v6 <= v7 then 0 else let v9 = 1 in
 let v8 = sub v6 v9 in
 call _v0 v3 v8 
 
let _v0 v1 v2  =
 call_closure v1 v2 
 
let _ =
 let v14 = 5 in
 let v13 = call _v3 v14  in
 call _min_caml_print_int v13 
